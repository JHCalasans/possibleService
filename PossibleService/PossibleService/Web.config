<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.7.2" />
    <httpRuntime targetFramework="4.7.2" />
  </system.web>
  <system.serviceModel>
    <!--<bindings>
      <wsHttpBinding>
        <binding name="WSHttpBinding_IServiceFrontal" closeTimeout="00:01:00"
                openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                bypassProxyOnLocal="false" transactionFlow="false"
                hostNameComparisonMode="StrongWildcard"
                maxBufferPoolSize="524288" maxReceivedMessageSize="5000000"
                messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true"
                allowCookies="false">
          <readerQuotas
             maxDepth="32" maxStringContentLength="8192"
             maxArrayLength="16384" maxBytesPerRead="4096"
             maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00"
              enabled="false" />
          <security mode="Message">
            <transport clientCredentialType="Windows"
                       proxyCredentialType="None" realm="" />
            <message clientCredentialType="Windows"
                     negotiateServiceCredential="true"
                     algorithmSuite="Default" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <services>
      <service name="Service1">
        <endpoint address="http://localhost:60292/Service1/" binding="wsHttpBinding"
            bindingConfiguration="WSHttpBinding_IServiceFrontal" contract="IService" />
      </service>
    </services>-->
    <!--<standardEndpoints>
      <webHttpEndpoint>
        <standardEndpoint name="NewStandardEndpoint0" />
      </webHttpEndpoint>
    </standardEndpoints>-->
   
    <behaviors>
      <serviceBehaviors>
        <behavior name="serviceBehaviors">
          <!-- Para evitar a divulgação de informações de metadados, defina os valores abaixo para falso antes da implantação -->
          <serviceMetadata httpGetEnabled="true"  />
          <!-- Para receber detalhes de exceção em falhas para fins de depuração, defina o valor abaixo para verdadeiro. Defina para falto antes da implantação para evitar a divulgação de informações de exceção -->
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="web">
          <webHttp/>
        </behavior>
      </endpointBehaviors>
    
    </behaviors>
    <services>
      <service behaviorConfiguration="serviceBehaviors" name="PossibleService.Service1">
        <endpoint address="" contract="PossibleService.IService1" binding="webHttpBinding" behaviorConfiguration="web"></endpoint>
      </service>
    </services>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        Para procurar o diretório de raiz do aplicativo Web durante a depuração, defina o valor abaixo para verdadeiro.
        Defina-o para falso antes da implantação para evitar a divulgação de informações da pasta do aplicativo Web.
-->
    <directoryBrowse enabled="true" />
  </system.webServer>
  <entityFramework>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
      <provider invariantName="System.Data.SQLite.EF6" type="System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6" />
    </providers>
  </entityFramework>
  
  
  
</configuration>